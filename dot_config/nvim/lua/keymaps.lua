-- use vim.keymap.set beyond vim.api.nvim_set_keymap
local opts = { noremap = true, silent = true }
vim.keymap.set("n", "<leader>o", "o<ESC>", opts)
vim.keymap.set("n", "<leader>O", "O<ESC>", opts)
vim.keymap.set("n", "<leader>w", "<cmd>w<CR>", opts)
vim.keymap.set("n", "<leader>wa", "<cmd>wa<CR>", opts)
vim.keymap.set("n", "<leader>wq", "<cmd>wq<CR>", opts)
vim.keymap.set("n", "<leader>wqa", "<cmd>wqa<CR>", opts)
vim.keymap.set("n", "<leader>q", "<cmd>q<CR>", opts)
vim.keymap.set("n", "<leader>qq", "<cmd>q!<CR>", opts)
vim.keymap.set("n", "<leader>qa", "<cmd>qa<CR>", opts)
vim.keymap.set("n", "<leader>qaa", "<cmd>qa!<CR>", opts)
vim.keymap.set("n", "<leader>a", "ggvG", opts)
vim.keymap.set("n", "j", "gj", opts)
vim.keymap.set("n", "k", "gk", opts)
vim.keymap.set("n", "<Esc><Esc>", "<cmd>nohlsearch<CR><Esc>", opts)
vim.keymap.set("n", "Y", "y$", opts)
-- vim buffer
vim.keymap.set("n", "<leader>be", "<cmd>enew<CR>", opts)
vim.keymap.set("n", "<leader>bd", "<cmd>bd<CR>", opts)
vim.keymap.set("n", "<leader>bdd", "<cmd>bd!<CR>", opts)
vim.keymap.set("n", "<leader>bp", "<cmd>bprevious<CR>", opts)
vim.keymap.set("n", "<leader>bn", "<cmd>bnext<CR>", opts)
vim.keymap.set("n", "<leader>Bf", "<cmd>bfirst<CR>", opts)
vim.keymap.set("n", "<leader>Bl", "<cmd>blast<CR>-vim", opts)
-- vim tab
vim.keymap.set("n", "<leader>tn", "<cmd><C-u>tabnext<CR>", opts)
vim.keymap.set("n", "<leader>tp", "<cmd><C-u>tabprevious<CR>", opts)
vim.keymap.set("n", "<leader>te", "<cmd><C-u>tabedit<CR>", opts)
vim.keymap.set("n", "<leader>tw", "<cmd><C-u>tabclose<CR>", opts)
vim.keymap.set("n", "<leader>to", "<cmd><C-u>tabonly<CR>", opts)
vim.keymap.set("n", "<leader>ts", "<cmd><C-u>tabs<CR>", opts)
-- fzf-lua
vim.keymap.set("n", "<leader>bl", "<cmd>FzfLua buffers<CR>", opts)
vim.keymap.set("n", "<leader>lg", "<cmd>FzfLua live_grep<CR>", opts)
vim.keymap.set("n", "<C-p>", "<cmd>FzfLua files<CR>", opts)
vim.keymap.set("n", "<leader>ch", "<cmd>FzfLua command_history<CR>", opts)
-- vim.keymap.set("n", "<leader>m", "<cmd>FzfLua keymaps<CR>", opts)
vim.keymap.set("n", "<leader>re", "<cmd>FzfLua registers<CR>", opts)
-- trouble
vim.keymap.set("n", "<leader>xx", "<cmd>TroubleToggle<cr>", opts)
vim.keymap.set("n", "<leader>xw", "<cmd>TroubleToggle workspace_diagnostics<cr>", opts)
vim.keymap.set("n", "<leader>xd", "<cmd>TroubleToggle document_diagnostics<cr>", opts)
vim.keymap.set("n", "<leader>xl", "<cmd>TroubleToggle loclist<cr>", opts)
vim.keymap.set("n", "<leader>xq", "<cmd>TroubleToggle quickfix<cr>", opts)
vim.keymap.set("n", "gR", "<cmd>TroubleToggle lsp_references<cr>", opts)
-- diffview
vim.keymap.set("n", "<leader>gd", "<cmd>DiffviewFileHistory %<CR>", opts)
vim.keymap.set("n", "gd", "<cmd>DiffviewToggleFiles<CR>", opts)
-- neo-tree
vim.keymap.set("n", "<leader>e", "<cmd>NeoTreeFloatToggle<CR>", opts)
-- hop
vim.keymap.set("n", "<leader>k", "<cmd>HopLineBC<CR>", opts)
vim.keymap.set("n", "<leader>j", "<cmd>HopLineAC<CR>", opts)
-- lspsaga
vim.keymap.set("n", "gh", "<cmd>Lspsaga lsp_finder<CR>")
vim.keymap.set({ "n", "v" }, "<leader>ca", "<cmd>Lspsaga code_action<CR>")
vim.keymap.set("n", "gr", "<cmd>Lspsaga rename<CR>")
vim.keymap.set("n", "gr", "<cmd>Lspsaga rename ++project<CR>")
vim.keymap.set("n", "gd", "<cmd>Lspsaga peek_definition<CR>")
vim.keymap.set("n", "gd", "<cmd>Lspsaga goto_definition<CR>")
vim.keymap.set("n", "gt", "<cmd>Lspsaga peek_type_definition<CR>")
vim.keymap.set("n", "gt", "<cmd>Lspsaga goto_type_definition<CR>")
vim.keymap.set("n", "<leader>sl", "<cmd>Lspsaga show_line_diagnostics<CR>")
vim.keymap.set("n", "<leader>sc", "<cmd>Lspsaga show_cursor_diagnostics<CR>")
vim.keymap.set("n", "<leader>sb", "<cmd>Lspsaga show_buf_diagnostics<CR>")
vim.keymap.set("n", "[e", "<cmd>Lspsaga diagnostic_jump_prev<CR>")
vim.keymap.set("n", "]e", "<cmd>Lspsaga diagnostic_jump_next<CR>")
vim.keymap.set("n", "[E", function()
	require("lspsaga.diagnostic"):goto_prev({ severity = vim.diagnostic.severity.ERROR })
end)
vim.keymap.set("n", "]E", function()
	require("lspsaga.diagnostic"):goto_next({ severity = vim.diagnostic.severity.ERROR })
end)
vim.keymap.set("n", "<leader><leader>o", "<cmd>Lspsaga outline<CR>")
vim.keymap.set("n", "K", "<cmd>Lspsaga hover_doc<CR>")
vim.keymap.set("n", "K", "<cmd>Lspsaga hover_doc ++keep<CR>")
vim.keymap.set("n", "<leader>ci", "<cmd>Lspsaga incoming_calls<CR>")
vim.keymap.set("n", "<leader>co", "<cmd>Lspsaga outgoing_calls<CR>")
vim.keymap.set({ "n", "t" }, "<A-d>", "<cmd>Lspsaga term_toggle<CR>")
